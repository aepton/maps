{"version":3,"file":"component---src-pages-bikes-js-ca496d4a040d3c041514.js","mappings":"mKAKA,MAAMA,EAAa,CACjBC,MAAO,UACPC,QAAS,EACTC,WAAY,4CAGRC,EAAM,IAAyC,IAAxC,KAAEC,EAAI,OAAEC,EAAM,QAAEC,EAAO,QAAEC,GAAS,EAE7C,MAAMC,GAAUC,EAAAA,EAAAA,QAAO,MAIjBC,GAASD,EAAAA,EAAAA,QAAO,MAkEtB,OAhEAE,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAYP,EACZQ,EAAUT,EAEd,MAMMU,EAAM,IAAIC,EAAAA,IAAe,CAC7BC,UAAWR,EAAQS,QACnBC,MAPQ,mEAQRb,OAAQO,EACRR,KAAMS,EACNP,UACAC,YA4CF,OA1CAG,EAAOO,QAAUH,EAGjBA,EAAIK,GAAG,QAAQC,UACX,MAAMC,QAAiBC,MAAM,+BAC7B,IAAKD,EAASE,GACV,MAAM,IAAIC,MAAO,oBAAmBH,EAASI,UAGjD,MAAMC,QAAaL,EAASK,OAC5BC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAKG,UACjBF,QAAQC,IAAgB,CACpBE,KAAM,UACNC,KAAM,CACFD,KAAM,oBACND,SAAUH,EAAKG,YAGvBf,EAAIkB,UACA,sBACA,CACIF,KAAM,UACNC,KAAM,CACFD,KAAM,oBACND,SAAUH,EAAKG,YAK3Bf,EAAImB,SAAS,CACT,GAAM,aACN,KAAQ,OACR,OAAU,sBACV,MAAS,CACL,aAAc,UACd,eAAgB,GAChB,aAAc,IAEpB,IAGC,KACLnB,EAAIoB,QAAQ,CACb,GACA,IACI,uBAAKC,IAAK3B,EAASU,MAAO,CAAEkB,MAAO,QAASC,OAAQ,UAAa,EAQ1ElC,EAAImC,aAAe,CACjBjC,OAAQ,EAAE,WAAY,WACtBD,KAAM,GACNE,QAAS,GAWX,UARkB,IAEd,wBAAMY,MAAOnB,GACX,gBAACI,EAAG,OAOH,MAAMoC,EAAO,IAAM,6BAAO,yB","sources":["webpack://maps/./src/pages/bikes.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\"\nimport PropTypes from \"prop-types\"\nimport * as maplibregl from \"maplibre-gl\"\nimport \"maplibre-gl/dist/maplibre-gl.css\"\n\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 0,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n}\n\nconst Map = ({ zoom, center, minZoom, maxZoom }) => {\n  // this ref holds the map DOM node so that we can pass it into MapLibre GL\n  const mapNode = useRef(null)\n\n  // this ref holds the map object once we have instantiated it, so that we\n  // can use it in other hooks\n  const mapRef = useRef(null)\n\n  useEffect(() => {\n    let mapCenter = center\n    let mapZoom = zoom\n\n    const tileOptions = {\n        dark: 'https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json',\n        light: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n        voyager: 'https://basemaps.cartocdn.com/gl/voyager-gl-style/style.json'\n    };\n\n    const map = new maplibregl.Map({\n      container: mapNode.current,\n      style: tileOptions['dark'], // style URL\n      center: mapCenter,\n      zoom: mapZoom,\n      minZoom,\n      maxZoom,\n    })\n    mapRef.current = map\n    // window.map = map // todo for easier debugging and querying via console\n\n    map.on(\"load\", async () => {\n        const response = await fetch('/static/bike_routes.geojson');\n        if (!response.ok) {\n            throw new Error(`Response status: ${response.status}`);\n        }\n\n        const json = await response.json();\n        console.log(json);\n        console.log(json.features);\n        console.log(            {\n            type: 'geojson',\n            data: {\n                type: 'FeatureCollection',\n                features: json.features\n            }\n        });\n        map.addSource(\n            'seattle-bike-routes',\n            {\n                type: 'geojson',\n                data: {\n                    type: 'FeatureCollection',\n                    features: json.features\n                }\n            }\n        );\n\n        map.addLayer({\n            'id': 'route-line',\n            'type': 'line',\n            'source': 'seattle-bike-routes',\n            'paint': {\n                'line-color': '#00ff00',\n                'line-opacity': 0.4,\n                'line-width': 3\n            }\n        });\n    })\n\n    return () => {\n      map.remove()\n    }\n  }, [])\n  return <div ref={mapNode} style={{ width: \"100vw\", height: \"100vh\" }} />\n}\n\nMap.propTypes = {\n  center: PropTypes.arrayOf(PropTypes.number),\n  zoom: PropTypes.number,\n}\n\nMap.defaultProps = {\n  center: [-122.332069, 47.606209],\n  zoom: 14,\n  minZoom: 2,\n}\n\nconst IndexPage = () => {\n  return (\n    <main style={pageStyles}>\n      <Map></Map>\n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const Head = () => <title>Bike Routes in Seattle</title>\n"],"names":["pageStyles","color","padding","fontFamily","Map","zoom","center","minZoom","maxZoom","mapNode","useRef","mapRef","useEffect","mapCenter","mapZoom","map","maplibregl","container","current","style","on","async","response","fetch","ok","Error","status","json","console","log","features","type","data","addSource","addLayer","remove","ref","width","height","defaultProps","Head"],"sourceRoot":""}